@{
    ViewData["Title"] = "Arctiq Chess Game Viewer";
}

@model GameState
<div class="chess-board">
    @for (int row = 0; row < 8; row++)
    {
        <div class="row">
            @for (int col = 0; col < 8; col++)
            {
                var piece = Model.Board.Squares[row,col];
                var cellClass = (row + col) % 2 == 0 ? "white" : "black";
                <div class="cell @cellClass" 
                     data-row="@row" 
                     data-col="@col">
                    @if (piece != null)
                    {
                        <img class="piece" src="@piece.ImagePath" alt="@piece.Type" />
                    }
                </div>
            }
        </div>
    }
</div>
<div class="controls">
    <button id="resetButton" class="btn btn-primary">Reset Game</button>
</div>

<script>
let selectedCell = null;

document.querySelectorAll('.cell').forEach(cell => {
    cell.addEventListener('click', function() {
        if (selectedCell === null) {
            selectedCell = this;
            this.classList.add('selected');
        } else {
            const fromRow = selectedCell.dataset.row;
            const fromCol = selectedCell.dataset.col;
            const toRow = this.dataset.row;
            const toCol = this.dataset.col;
            
            console.log(`Moving from (${fromRow},${fromCol}) to (${toRow},${toCol})`);
            fetch('/Game/Move', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `fromRow=${fromRow}&fromCol=${fromCol}&toRow=${toRow}&toCol=${toCol}`
            })
            .then(response => {
                console.log('Response status:', response.status);
                if (!response.ok) {
                    throw new Error('Move failed');
                }
                return response.json();
            })
            .then(data => {
                console.log('Move result:', data);
                if (data.success) {
                    window.location.reload();
                } else {
                    console.log(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });

            selectedCell.classList.remove('selected');
            selectedCell = null;
        }
    });
});

document.getElementById('resetButton').addEventListener('click', function() {
    fetch('/Game/Reset', {
        method: 'POST'
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Reset failed');
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            window.location.reload();
        } else {
            alert(data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Failed to reset game: ' + error.message);
    });
});

</script>