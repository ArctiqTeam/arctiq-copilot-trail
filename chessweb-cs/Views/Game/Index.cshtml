@model GameState

<div class="chess-board">
    @for (int row = 0; row < 8; row++)
    {
        <div class="row">
            @for (int col = 0; col < 8; col++)
            {
                var piece = Model.Board.Squares[row,col];
                var cellClass = (row + col) % 2 == 0 ? "white" : "black";
                <div class="cell @cellClass" 
                     data-row="@row" 
                     data-col="@col">
                    @if (piece != null)
                    {
                        <span class="piece">@piece.Symbol</span>
                    }
                </div>
            }
        </div>
    }
</div>

<script>
let selectedCell = null;

document.querySelectorAll('.cell').forEach(cell => {
    cell.addEventListener('click', function() {
        if (selectedCell === null) {
            selectedCell = this;
            this.classList.add('selected');
        } else {
            const fromRow = selectedCell.dataset.row;
            const fromCol = selectedCell.dataset.col;
            const toRow = this.dataset.row;
            const toCol = this.dataset.col;
            
            fetch('/Game/Move', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `fromRow=${fromRow}&fromCol=${fromCol}&toRow=${toRow}&toCol=${toCol}`
            }).then(() => window.location.reload());
            
            selectedCell.classList.remove('selected');
            selectedCell = null;
        }
    });
});
</script>

<style>
.chess-board {
    width: 400px;
    height: 400px;
    border: 1px solid black;
}
.row {
    display: flex;
    height: 12.5%;
}
.cell {
    width: 12.5%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
}
.cell.white { background-color: #fff; }
.cell.black { background-color: #ccc; }
.cell.selected { background-color: yellow; }
.piece {
    font-size: 24px;
}
</style>